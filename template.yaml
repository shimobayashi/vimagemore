AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  vimagemore

  Sample SAM Template for vimagemore
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 60

Resources:
  UploaderFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: uploader/
      Handler: dst/app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        Uploader:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /upload
            Method: post
      Environment:
        Variables:
          BUCKET_NAME: !Ref Bucket
          BUCKET_URL: !GetAtt Bucket.WebsiteURL
          IMAGE_TABLE_NAME: !Ref ImageTable
          IMAGE_TAG_TABLE_NAME: !Ref ImageTagTable
      Policies:
        - S3FullAccessPolicy:
            BucketName: !Ref Bucket
        - DynamoDBCrudPolicy:
            TableName: !Ref ImageTable
        - DynamoDBCrudPolicy:
            TableName: !Ref ImageTagTable
  CreateFeedFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: create_feed/
      Handler: dst/app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        CreateFeed:
          Type: Schedule
          Properties:
            Schedule: cron(11 */3 * * ? *)
      Environment:
        Variables:
          BUCKET_NAME: !Ref Bucket
          BUCKET_REGIONAL_DOMAIN_NAME: !GetAtt Bucket.RegionalDomainName
          IMAGE_TABLE_NAME: !Ref ImageTable
          IMAGE_TAG_TABLE_NAME: !Ref ImageTagTable
          CREATE_FEED_TARGET_TABLE_NAME: !Ref CreateFeedTargetTable
      Policies:
        - S3FullAccessPolicy:
            BucketName: !Ref Bucket
        - DynamoDBReadPolicy:
            TableName: !Ref ImageTable
        - DynamoDBReadPolicy:
            TableName: !Ref ImageTagTable
        - DynamoDBReadPolicy:
            TableName: !Ref CreateFeedTargetTable
  ExpireImageFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: expire_image/
      Handler: dst/app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        CreateFeed:
          Type: Schedule
          Properties:
            Schedule: cron(31 4 * * ? *)
      Environment:
        Variables:
          BUCKET_NAME: !Ref Bucket
          IMAGE_TABLE_NAME: !Ref ImageTable
          IMAGE_TAG_TABLE_NAME: !Ref ImageTagTable
      Policies:
        - S3FullAccessPolicy:
            BucketName: !Ref Bucket
        - DynamoDBReadPolicy:
            TableName: !Ref ImageTable
        - DynamoDBReadPolicy:
            TableName: !Ref ImageTagTable
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: LogDeliveryWrite # ログの出力先も兼ねたりするため、個別にACLでpublic-readを付与する想定
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      LoggingConfiguration:
        LogFilePrefix: logs/
  ImageTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: Id
          AttributeType: S
      KeySchema:
        # UpdatedAtを追加したりするとIdがほぼ重複しなくなってしまうので注意
        - AttributeName: Id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  ImageTagTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: Id
          AttributeType: S
      KeySchema:
        - AttributeName: Id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  CreateFeedTargetTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: ImageTag
          AttributeType: S
      KeySchema:
        - AttributeName: ImageTag
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  UploaderApi:
    Description: "API Gateway endpoint URL for Prod stage for Uploader function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/upload/"
  UploaderFunction:
    Description: "Uploader Lambda Function ARN"
    Value: !GetAtt UploaderFunction.Arn
  UploaderFunctionIamRole:
    Description: "Implicit IAM Role created for Uploader function"
    Value: !GetAtt UploaderFunctionRole.Arn
